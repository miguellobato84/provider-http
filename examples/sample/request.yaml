apiVersion: litellm.nwse.io/v1alpha2
kind: Request
metadata:
  name: manage-user
spec:
  forProvider:
    # Injecting data from secrets is possible, simply use the following syntax: {{ name:namespace:key }} (supported for body and headers only)
    insecureSkipTLSVerify: true
    waitTimeout: 5m
    headers:
      Content-Type:
        - application/json
      Authorization:
        - ("Bearer {{ auth:default:token }}")
    payload:
      baseUrl: http://flask-api.default.svc.cluster.local/v1/users
      body: |
        {
          "username": "mock_user", 
          "password": "secretdata {{ user-password:crossplane-system:password }}",
          "email": "mock_user@example.com", 
          "age": 30
        }
    mappings:
      - method: "CREATE"
        body: |
          {
            username: .payload.body.username, 
            email: .payload.body.email, 
            age: .payload.body.age,
            password: .payload.body.password
          }
        url: .payload.baseUrl
        headers:
          Content-Type:
            - application/json
          Authorization:
            - ("Bearer {{ auth:default:token }}")
          Extra-Header-For-Post:
            - extra-value
      - method: "GET"
        url: (.payload.baseUrl + "/" + (.response.body.id|tostring))
      - method: "PUT"
        body: |
          {
            email: .payload.body.email, 
            age: .payload.body.age
          }
        url: (.payload.baseUrl + "/" + (.response.body.id|tostring))
      - method: "DELETE"
        url: (.payload.baseUrl + "/" + (.response.body.id|tostring))

    # Secrets receiving patches from response data
    secretInjectionConfigs:
      - secretRef:
          name: response-secret
          namespace: default
        secretKey: extracted-user-email
        responsePath: .body.email
        # setOwnerReference determines if the secret should be deleted when the associated resource is deleted.
        # When injecting multiple keys into the same secret, ensure this field is set consistently for all keys.
        setOwnerReference: true
      - secretRef:
          name: response-secret
          namespace: default
        secretKey: extracted-header-data
        responsePath: .headers."X-Secret-Header"[0]
        setOwnerReference: true
      - secretRef:
          name: response-user-password
          namespace: default
        secretKey: extracted-user-password
        responsePath: .body.password
  providerConfigRef:
    name: http-conf
